name: Build and Deploy Docker Compose  

on:  
  push:  
    branches:  
      - main 
      
jobs:  
  build:  
    runs-on: self-hosted 
    steps:  
      - name: Checkout code  
        uses: actions/checkout@v2  
        
      - name: Docker Hub login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Start Services 
        run: |
          docker-compose down
          docker system prune -af
          docker-compose up -d --build
          
        env:
          MINIO_ENDPOINT: ${{ vars.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      
      - name: Notify Telegram (Success)
        if: success()
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d "message_thread_id=${{ secrets.TELEGRAM_THREAD_ID }}" \
          -d "text=✅ Деплой успешен! (${{ github.repository }})" \
          -d "parse_mode=Markdown"

      - name: Notify Telegram (Failure)
        if: failure()
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d "message_thread_id=${{ secrets.TELEGRAM_THREAD_ID }}" \
          -d "text=❌ Деплой упал! (${{ github.repository }})" \
          -d "parse_mode=Markdown"
